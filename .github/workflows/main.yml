name: Daily F-Droid Data Update

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
    inputs:
      force_update:
        description: 'Force update even if no changes'
        required: false
        type: boolean
        default: false

permissions:
  contents: write
  actions: read

jobs:
  update-fdroid-data:
    name: Update F-Droid Repository Data
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: 🐍 Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: 📦 Install dependencies
        run: |
          set -euo pipefail
          python3 -m pip install --upgrade pip
          pip install requests

      - name: 📁 Create data directory
        run: |
          set -euo pipefail
          mkdir -p data

      - name: 📝 Get previous app IDs
        id: prev_apps
        run: |
          set -euo pipefail
          if [ -f "data/apps.json" ]; then
            python3 -c "import json; apps=json.load(open('data/apps.json'))['apps']; print(' '.join([a['id'] for a in apps]))" > prev_ids.txt
          else
            > prev_ids.txt
          fi

      - name: ⬇️ Download and process F-Droid index
        run: |
          set -euo pipefail
          python3 scripts/update_data.py

      - name: ✅ Verify data integrity
        id: verify
        run: |
          set -euo pipefail
          FILE="data/apps.json"
          if [ ! -f "$FILE" ]; then
            echo "ERROR: $FILE not found!"
            exit 1
          fi

          python3 -c "import json; json.load(open('$FILE'))" || exit 1

          python3 -c "import json; apps=json.load(open('$FILE'))['apps']; print(' '.join([a['id'] for a in apps]))" > new_ids.txt

          NEW_COUNT=$(wc -w < new_ids.txt)
          echo "new_count=$NEW_COUNT" >> $GITHUB_OUTPUT
          echo "New apps count: $NEW_COUNT"

      - name: 📊 Calculate changes
        id: changes
        run: |
          set -euo pipefail
          PREV_IDS=$(cat prev_ids.txt || true)
          NEW_IDS=$(cat new_ids.txt || true)

          ADDED=$(comm -13 <(echo "$PREV_IDS" | tr ' ' '\n' | sort) <(echo "$NEW_IDS" | tr ' ' '\n' | sort) | wc -l || true)
          REMOVED=$(comm -23 <(echo "$PREV_IDS" | tr ' ' '\n' | sort) <(echo "$NEW_IDS" | tr ' ' '\n' | sort) | wc -l || true)

          echo "apps_added=$ADDED" >> $GITHUB_OUTPUT
          echo "apps_removed=$REMOVED" >> $GITHUB_OUTPUT
          echo "Apps added: $ADDED, Apps removed: $REMOVED"

      - name: 💾 Commit & push updates
        run: |
          set -euo pipefail
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add data/apps.json

          CHANGES_DETECTED=$(git diff --cached --quiet || echo "yes")
          FORCE_UPDATE="${{ github.event.inputs.force_update || 'false' }}"
          NEW_COUNT="${{ steps.verify.outputs.new_count }}"
          ADDED="${{ steps.changes.outputs.apps_added }}"
          REMOVED="${{ steps.changes.outputs.apps_removed }}"

          if [ "$CHANGES_DETECTED" = "yes" ] || [ "$FORCE_UPDATE" = "true" ]; then
            if [ -f "data/apps.json.backup" ]; then
              rm -f data/apps.json.backup
            fi
            if [ -f "data/apps.json" ]; then
              cp data/apps.json data/apps.json.backup
              echo "Backup of previous data created."
            fi

            git commit -m "Daily F-Droid update: $(date -u +"%Y-%m-%d %H:%M:%SZ") | Apps: +$ADDED/-$REMOVED | Total: $NEW_COUNT"
            git push origin main
            echo "✅ Changes committed and pushed successfully. Apps added: $ADDED, removed: $REMOVED, total: $NEW_COUNT"
          else
            echo "No changes detected and force update not requested. Skipping commit/push."
